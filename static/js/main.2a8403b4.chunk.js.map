{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/SectionTitle/SectionTitle.styled.js","components/SectionTitle/SectionTitle.js","components/Notification/Notification.styled.js","components/Notification/Notification.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["Button","styled","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","StatSection","section","Container","div","Span","span","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","SectionTitle","title","children","NotificationText","p","Notification","message","App","state","e","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","totalFeedback","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAEaA,EAASC,IAAOC,OAAV,wO,OCEJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAEjD,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACrB,eAACP,EAAD,CAAQQ,KAAK,SAAsBC,QAAS,kBAAMJ,EAAgBE,IAAlE,UACC,IACAA,EAAQ,MAFkBA,MCL1B,I,EAAMG,EAAcT,IAAOU,QAAV,0FAOXC,EAAYX,IAAOY,IAAV,iDAITC,EAAOb,IAAOc,KAAV,kMCRF,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,cAACT,EAAD,UAEI,eAACF,EAAD,WACE,eAACI,EAAD,oBAAaG,EAAb,OACA,eAACH,EAAD,uBAAgBI,EAAhB,OACA,eAACJ,EAAD,mBAAYK,EAAZ,OACA,eAACL,EAAD,qBAAcM,EAAd,OACA,eAACN,EAAD,iCAA0BO,EAA1B,aCnBH,I,EAAMC,EAAQrB,IAAOsB,GAAV,yFCEH,SAASC,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC5C,OACE,oCACE,cAACJ,EAAD,UAAQG,IACPC,KCNA,I,EAAMC,EAAmB1B,IAAO2B,EAAV,iECEd,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,cAACH,EAAD,UAAmBG,ICFrB,IAAMlB,EAAYX,IAAOY,IAAV,4CC0DPkB,G,kNAnDbC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPd,gBAAkB,SAAA4B,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAIE,EAAUF,GAAK,O,EAGxBG,mBAAqB,WACnB,MAA+B,EAAKJ,MAEpC,OAFA,EAAQf,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBkB,gCAAkC,WAChC,MAA+B,EAAKL,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OAAOmB,KAAKC,MAAc,IAAPtB,GAAeA,EAAOC,EAAUC,K,4CAErD,WACE,MAA+BqB,KAAKR,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAGvB,OACE,eAAC,EAAD,WACE,cAACK,EAAD,CAAcC,MAAM,wBAApB,SACE,cAACtB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBmC,KAAKnC,oBAG1B,cAACmB,EAAD,CAAcC,MAAM,aAApB,SACGe,KAAKJ,qBAAuB,EAC3B,cAACpB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLsB,cAAeD,KAAKJ,qBACpBhB,MAAOoB,KAAKJ,qBACZf,mBAAoBmB,KAAKH,oCAG3B,cAACR,EAAD,CAAcC,QAAQ,+B,GA5ChBY,IAAMC,YCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a8403b4.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Button = styled.button`\r\nmargin: 10px;\r\ntext-transform: uppercase;\r\nfont-size: 14px;\r\npadding: 15px;\r\ncolor: rgb(85, 42, 85);\r\nfont-weight: 600;\r\nbox-shadow: 4px 5px 8px rgb(85, 42, 85);\r\n border-radius: 5px;\r\n cursor: pointer;\r\n`","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Button } from './FeedbackOptions.styled';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n\r\n  return options.map(option => (\r\n      <Button type=\"button\" key={option} onClick={() => onLeaveFeedback(option)}>\r\n      {' '}\r\n      {option}{' '}\r\n    </Button>\r\n  ));\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  handleIncrement: PropTypes.func,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StatSection = styled.section`\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-weight: 700;\r\n\r\n`\r\n\r\nexport const Container = styled.div`\r\npadding-left: 10px;\r\n`\r\n\r\nexport const Span = styled.span`\r\nborder: 1px solid rgb(85, 42, 85);\r\ncolor: black;\r\nmargin-bottom: 5px;\r\npadding: 10px;\r\nwidth:300px;\r\nbox-shadow: 5px 6px 9px rgb(85, 42, 85);\r\n border-radius: 5px;\r\n`","import PropTypes from 'prop-types';\r\nimport { StatSection } from './Statistics.styled';\r\nimport { Container } from './Statistics.styled';\r\nimport { Span } from './Statistics.styled';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <Container>\r\n      {\r\n        <StatSection>\r\n          <Span>Good: {good} </Span>\r\n          <Span>Neutral: {neutral} </Span>\r\n          <Span>Bad: {bad} </Span>\r\n          <Span>Total: {total} </Span>\r\n          <Span>Positive Feedback: {positivePercentage}% </Span>\r\n        </StatSection>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import styled from '@emotion/styled';\r\nexport const Title = styled.h2`\r\n  font-size: 24px;\r\n  margin-left: 13px;\r\n  color: #2d012d;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Title } from './SectionTitle.styled';\r\n\r\nexport default function SectionTitle({ title, children }) {\r\n  return (\r\n    <section>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\nexport const NotificationText = styled.p`\r\nmargin-left: 15px;\r\ncolor: #2d012d;\r\n`","import PropTypes from 'prop-types';\r\nimport { NotificationText } from './Notification.styled';\r\n\r\nexport default function Notification({ message }) {\r\n  return <NotificationText>{message}</NotificationText>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\npadding: 20px;\r\n`\r\n","import React from 'react';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport SectionTitle from '../SectionTitle/SectionTitle';\nimport Notification from '../Notification/Notification';\nimport { Container } from './App.styled';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = e => {\n    this.setState(prevState => ({\n      [e]: prevState[e] + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n\n    return Math.round((good * 100) / (good + neutral + bad));\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n  \n\n    return (\n      <Container>\n        <SectionTitle title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </SectionTitle>\n        <SectionTitle title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              totalFeedback={this.countTotalFeedback()}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </SectionTitle>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}