{"version":3,"sources":["components/Feedback/FeedbackOptions.styled.js","components/Feedback/FeedbackOptions.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/SectionTitle/SectionTitle.styled.js","components/SectionTitle/SectionTitle.js","components/Notification/Notification.styled.js","components/Notification/Notification.js","App.styled.js","App.js","index.js"],"names":["Buttons","styled","button","FeedbackOptions","options","handleIncrement","map","option","type","onClick","toUpperCase","StatSection","section","Container","div","Span","span","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","SectionTitle","title","children","NotificationText","p","Notification","message","App","state","e","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","totalFeedback","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAEaA,EAAUC,IAAOC,OAAV,yL,OCIL,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAE/C,OAAOD,EAAQE,KAAI,SAACC,GAAD,OAEP,eAACP,EAAD,CAASQ,KAAK,SAAsBC,QAAS,kBAAIJ,EAAgBE,IAAjE,cAA6EA,EAAOG,cAApF,MAA4BH,MCRrC,I,EAAMI,EAAcV,IAAOW,QAAV,0FAOXC,EAAYZ,IAAOa,IAAV,iDAITC,EAAOd,IAAOe,KAAV,kMCTF,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAE5D,OACG,cAACT,EAAD,UAISQ,EAAQ,GAER,eAACV,EAAD,WACI,eAACI,EAAD,oBAAaG,EAAb,OACR,eAACH,EAAD,uBAAiBI,EAAjB,OACA,eAACJ,EAAD,mBAAYK,EAAZ,OACA,eAACL,EAAD,qBAAcM,EAAd,OACA,eAACN,EAAD,iCAA0BO,EAA1B,aCjBL,I,EAAMC,EAAQtB,IAAOuB,GAAV,oFCCH,SAASC,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC1C,OACG,oCAEK,cAACJ,EAAD,UAAQG,IACPC,KCNN,I,EAAMC,EAAmB3B,IAAO4B,EAAV,iECCd,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OAAO,cAACH,EAAD,UAAoBG,ICDxB,IAAMlB,EAAYZ,IAAOa,IAAV,2CC2DPkB,G,kNAhDXC,MAAQ,CACVf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEAf,gBAAkB,SAAC6B,GAEjB,EAAKC,UAAU,SAAAC,GAAS,sBAEpBF,EAAIE,EAAUF,GAAK,O,EAI9BG,mBAAqB,WAClB,MAA+B,EAAKJ,MAErC,OAFC,EAAQf,KAAR,EAAcC,QAAd,EAAuBC,K,EAI1BkB,gCAAkC,WAChC,MAA+B,EAAKL,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAE3B,OAAOmB,KAAKC,MAAW,IAALtB,GAAUA,EAAKC,EAAQC,K,4CAEvC,WACE,MAA+BqB,KAAKR,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBsB,EAAgBxB,EAAKC,EAAQC,EAE/B,OACE,eAAC,EAAD,WACE,cAACK,EAAD,CAAcC,MAAM,wBAApB,SACA,cAAC,EAAD,CAAUtB,QAAS,CAAC,OAAO,UAAW,OAAQC,gBAAiBoC,KAAKpC,oBAEpE,cAACoB,EAAD,CAAcC,MAAM,aAApB,SACGgB,EAAgB,EACf,cAACzB,EAAD,CAAYC,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKsB,cAAeA,EACjErB,MAAOoB,KAAKJ,qBACZf,mBAAoBmB,KAAKH,oCAAuC,cAACR,EAAD,CAAcC,QAAQ,+B,GAtCtFY,IAAMC,YCLxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7853f885.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Buttons = styled.button`\r\nmargin: 10px;\r\nfont-size: 14px;\r\npadding: 15px;\r\ncolor: rgb(85, 42, 85);\r\nfont-weight: 600;\r\nbox-shadow: 4px 5px 8px rgb(85, 42, 85);\r\n border-radius: 5px;\r\n`","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Buttons} from './FeedbackOptions.styled'\r\n\r\n\r\n\r\nexport default function FeedbackOptions({ options, handleIncrement }) {\r\n   \r\n    return options.map((option) =>(\r\n                \r\n                <Buttons type=\"button\" key={option} onClick={()=>handleIncrement(option)} > {option.toUpperCase()} </Buttons>\r\n            ))\r\n         \r\n         \r\n    \r\n}\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array,\r\n    handleIncrement: PropTypes.func\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StatSection = styled.section`\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-weight: 700;\r\n\r\n`\r\n\r\nexport const Container = styled.div`\r\npadding-left: 10px;\r\n`\r\n\r\nexport const Span = styled.span`\r\nborder: 1px solid rgb(85, 42, 85);\r\ncolor: black;\r\nmargin-bottom: 5px;\r\npadding: 10px;\r\nwidth:300px;\r\nbox-shadow: 5px 6px 9px rgb(85, 42, 85);\r\n border-radius: 5px;\r\n`","import PropTypes from 'prop-types';\r\nimport { StatSection } from './Statistics.styled';\r\nimport { Container } from './Statistics.styled';\r\nimport { Span } from './Statistics.styled';\r\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    \r\n    return (\r\n       <Container>\r\n         \r\n            {\r\n              \r\n                total > 0 && (\r\n                  \r\n                <StatSection>\r\n                    <Span>Good: {good} </Span>\r\n            <Span>Neutral: { neutral} </Span>\r\n            <Span>Bad: {bad} </Span>\r\n            <Span>Total: {total} </Span>\r\n            <Span>Positive Feedback: {positivePercentage}% </Span>\r\n                </StatSection>)\r\n        }\r\n       </Container>   \r\n                  \r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number\r\n    \r\n\r\n\r\n}\r\n","import styled from '@emotion/styled'\r\nexport const Title = styled.h2`\r\nfont-size:24px;\r\nmargin-left: 13px;\r\ncolor: #2d012d;\r\n\r\n`","import PropTypes from 'prop-types';\r\nimport {Title} from './SectionTitle.styled'\r\nexport default function SectionTitle({ title, children }) {\r\n    return (\r\n       <section>\r\n          \r\n            <Title>{title}</Title>\r\n            {children}\r\n         </section>    \r\n    )\r\n}\r\n\r\n\r\nSectionTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired\r\n}","import styled from '@emotion/styled';\r\nexport const NotificationText = styled.p`\r\nmargin-left: 15px;\r\ncolor: #2d012d;\r\n`","import PropTypes from 'prop-types';\r\nimport { NotificationText } from './Notification.styled';\r\nexport default function Notification({ message }) {\r\n    return <NotificationText>{ message}</NotificationText>\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\nmargin: 20px;\r\n`\r\n","import React from 'react';\nimport Feedback from './components/Feedback/FeedbackOptions'\n\nimport Statistics from './components/Statistics/Statistics';\n\nimport SectionTitle from './components/SectionTitle/SectionTitle';\nimport Notification from './components/Notification/Notification';\nimport {Container} from './App.styled'\nimport './App.css';\n\n\nclass App extends React.Component{\n    \n    state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n    }\n       handleIncrement = (e) => {\n       \n         this.setState((prevState => ({\n                \n            [e]: prevState[e] + 1\n         \n        })))\n       }\n  countTotalFeedback = () => {\n     const { good, neutral, bad } = this.state\n   \n    return    good+neutral+bad\n  }\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state\n  \nreturn Math.round(good*100/(good+neutral+bad))\n  }\n  render() {\n    const { good, neutral, bad } = this.state\n    const totalFeedback = good+neutral+bad\n      \n        return (\n          <Container>\n            <SectionTitle title='Please leave feedback'>\n            <Feedback options={['good','neutral', 'bad']} handleIncrement={this.handleIncrement}/>\n            </SectionTitle>\n            <SectionTitle title='Statistics'>\n              {totalFeedback > 0 ?\n                <Statistics good={good} neutral={neutral} bad={bad} totalFeedback={totalFeedback}\n                  total={this.countTotalFeedback()}\n                  positivePercentage={this.countPositiveFeedbackPercentage()}/> : <Notification message=\"No feedback given\" />}\n            \n          </SectionTitle>\n          </Container>\n    \n           \n        )\n    }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}